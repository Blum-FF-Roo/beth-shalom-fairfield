rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true
service firebase.storage {
  match /b/{bucket}/o {
    // Rules for hero slider images
    match /hero-slider/{imageId} {
      // Allow read access to all users (images are public)
      allow read: if true;
      
      // Allow write access only to authenticated admin users
      allow write: if request.auth != null 
                   && firestore.exists(/databases/(default)/documents/users/$(request.auth.uid))
                   && firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super-admin'];
      
      // Allow delete access only to authenticated admin users
      allow delete: if request.auth != null 
                    && firestore.exists(/databases/(default)/documents/users/$(request.auth.uid))
                    && firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super-admin'];
    }
    
    // Catch-all rule - deny by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}